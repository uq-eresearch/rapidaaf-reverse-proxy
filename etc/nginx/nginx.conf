user  nobody;
worker_processes  1;

env COOKIE_DOMAIN;
env USERNAME_ATTRIBUTE;
env UPSTREAM_HOST;
env UPSTREAM_PORT;
env RAPIDAAF_SECRET;
env RAPIDAAF_URL;

error_log /dev/stdout debug;

events {
  worker_connections  1024;
}

http {
  access_log /dev/stdout;
  include       mime.types;
  default_type  application/octet-stream;

  sendfile        on;

  keepalive_timeout  65;

  client_max_body_size 100G;
  proxy_buffering off;
  proxy_request_buffering off;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  map $http_x_forwarded_proto $user_proto {
    default $http_x_forwarded_proto;
    '' $scheme;
  }

  lua_package_path "/usr/local/openresty/site/lualib/resty/?.lua;;";

  server {
    listen 8080;
    server_name  _;

    error_page   500 502 503 504  /50x.html;

    set $session_cookie_name "SESSION_AAF_JWT";

    set_by_lua_block $username_attribute {
      return os.getenv("USERNAME_ATTRIBUTE");
    }

    set_by_lua_block $cookie_domain {
      return os.getenv("COOKIE_DOMAIN");
    }

    set_by_lua_block $rapidaaf_secret {
      return os.getenv("RAPIDAAF_SECRET");
    }

    set_by_lua_block $rapidaaf_url {
      return os.getenv("RAPIDAAF_URL");
    }

    set_by_lua_block $upstream_host {
      return os.getenv("UPSTREAM_HOST");
    }

    set_by_lua_block $upstream_port {
      return os.getenv("UPSTREAM_PORT");
    }

    location / {
      access_by_lua_file "/etc/nginx/rapid_aaf_auth.lua";
      proxy_pass http://$upstream_host:$upstream_port;
      proxy_http_version 1.1;
      proxy_read_timeout 1d; # Allow websockets to idle
      proxy_set_header Host $http_host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Forwarded-Proto $user_proto;
      proxy_set_header X-Forwarded-Host $http_host;
    }

    location = /50x.html {
      root   html;
    }

  }

}
